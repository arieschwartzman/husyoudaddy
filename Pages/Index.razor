@page "/"
@attribute [Authorize(Roles="sysadmin")]

@using Husyoudaddy.Data
@using Husyoudaddy.Shared
@using Microsoft.Azure.Cosmos.Table
@using Radzen.Blazor

@inject CosmosTableService CosmosService;
@inject MarketplaceService MarketplaceService;
@inject BlobService BlobService;

<h1>HUS your daddy</h1>

<SearchForm OnSearch="searchOwner" Tenants="@allTenants" />

@if (loading)
{
    <p><em>Loading...</em></p>
}

<div class="row" style="margin-top:20px">
    <div class="col-md-4">
        <RadzenCard>
            <div>Friendly Name:</div>
            <b>@foundTenant?.friendly_name</b>
            <div style="margin-top:20px">E-mail:</div>
            <b>@foundTenant?.email</b>
            <div style="margin-top:20px">SaaS Subscription Id:</div>
            <b>@foundTenant?.saasSubscriptionId</b>
            <div style="margin-top:20px">Max Messages:</div>
            <b>@foundTenant?.maxMessages</b>
            <div style="margin-top:20px">Messages Count:</div>
            <b>@foundTenant?.msgCount</b>
            <div style="margin-top:20px">App Id:</div>
            <b>@foundTenant?.app_id</b>
            <div style="margin-top:20px">App Secret:</div>
            <b>@foundTenant?.app_secret</b>
        </RadzenCard>
    </div>
    <div class="col-md-4">
        <RadzenCard>
            <div>Bot Name:</div>
            <b>@foundTenant?.botName</b>
            <div style="margin-top:20px">Webchat Secret:</div>
            <b>@foundTenant?.webchat_secret</b>
            <div style="margin-top:20px">Plan Id:</div>
            <b>@foundTenant?.planId</b>
            <div style="margin-top:20px">Resource Group:</div>
            <b>@foundTenant?.armGroup</b>
            <div style="margin-top:20px">Subscription Id:</div>
            <b>@foundTenant?.subscriptionId</b>
        </RadzenCard>
    </div>
    <div class="col-md-4">
        <RadzenCard>
            <div>Name:</div>
            <b>@saaSApplication?.name</b>
            <div style="margin-top:20px">Status</div>
            <b>@saaSApplication?.saasSubscriptionStatus</b>
            <div style="margin-top:20px">Plan</div>
            <b>@saaSApplication?.planId</b>
            <div style="margin-top:20px">Purchaser</div>
            <b>@saaSApplication?.purchaser.emailId</b>
        </RadzenCard>
    </div>
</div>
<div class="row" style="margin-top:20px">
        <div class="col-md-6">
            <RadzenCard>
                <RadzenGrid AllowFiltering="true" AllowPaging="true" PageSize="10" AllowSorting="true" Data="@allScenarios" TItem="Scenario" ColumnWidth="200px" RowSelect="@onSelect">
                    <Columns>
                        <RadzenGridColumn TItem="Scenario" Property="name" Title="Name" />
                        <RadzenGridColumn TItem="Scenario" Property="scenario_trigger" Title="Id" />
                        <RadzenGridColumn TItem="Scenario" Property="updated" Title="Updated" />
                        <RadzenGridColumn TItem="Scenario" Property="description" Title="Description" />
                    </Columns>
                </RadzenGrid>
            </RadzenCard>
        </div>
        <div class="col-md-6">
            <RadzenCard>
                <ScenarioVisualizer Content="@ScenarioCode" />
            </RadzenCard>
        </div>
</div>


@code {
    bool loading = false;
    List<Tenant> allTenants;
    List<Scenario> allScenarios;
    Tenant foundTenant;
    Scenario selectedScenario;
    SaaSApplication saaSApplication;
    string ScenarioCode = "This is the code";

    protected async override void OnInitialized()
    {

        loading = true;
        allTenants = await CosmosService.GetAllTenantsAsync();
        loading = false;
        StateHasChanged();

        base.OnInitialized();
    }

    protected async void searchOwner(Tenant tenant)
    {
        loading = true;
        TableResult result = await CosmosService.GetTenantByIdAsync(tenant.RowKey);
        allScenarios = await CosmosService.GetAllScenariosAsync(tenant.RowKey);
        foundTenant = result.Result as Tenant;
        saaSApplication =  await MarketplaceService.GetSaaSSubscription(foundTenant.saasSubscriptionId);
        loading = false;
        StateHasChanged();
    }

    protected async void onSelect(Scenario args)
    {
        selectedScenario = args;
        ScenarioCode = await BlobService.getScenarioCode(foundTenant.name, args.RowKey);
    }
}
