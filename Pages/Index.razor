@page "/"
@attribute [Authorize(Roles="sysadmin")]

@using Husyoudaddy.Data
@using Husyoudaddy.Shared
@using Microsoft.Azure.Cosmos.Table
@using Radzen.Blazor

@inject CosmosTableService CosmosService;

<h1>HUS your daddy</h1>
<SearchForm OnSearch="searchOwner" Tenants="allTenants" />

@if (loading)
{
    <p><em>Loading...</em></p>
}

<div class="row">
    <RadzenCard Style="width:600px; margin-top: 20px; height:500px;">
        <div class="col-md-12">
            <div>Friendly Name:</div>
            <b>@foundTenant?.friendly_name</b>
            <div style="margin-top:20px">E-mail:</div>
            <b>@foundTenant?.email</b>
            <div style="margin-top:20px">SaaS Subscription Id:</div>
            <b>@foundTenant?.saasSubscriptionId</b>
            <div style="margin-top:20px">Max Messages:</div>
            <b>@foundTenant?.maxMessages</b>
            <div style="margin-top:20px">Messages Count:</div>
            <b>@foundTenant?.msgCount</b>
            <div style="margin-top:20px">App Id:</div>
            <b>@foundTenant?.app_id</b>
            <div style="margin-top:20px">App Secret:</div>
            <b>@foundTenant?.app_secret</b>
        </div>
    </RadzenCard>
    <RadzenCard Style="width:600px; margin-top: 20px; height:500px; margin-left:20px;">
        <div class="col-md-12">
            <div>Bot Name:</div>
            <b>@foundTenant?.botName</b>
            <div style="margin-top:20px">Webchat Secret:</div>
            <b>@foundTenant?.webchat_secret</b>
            <div style="margin-top:20px">Plan Id:</div>
            <b>@foundTenant?.planId</b>
            <div style="margin-top:20px">Resource Group:</div>
            <b>@foundTenant?.armGroup</b>
        </div>
    </RadzenCard>
</div>


@code {
    bool loading = false;
    List<Tenant> allTenants;
    Tenant foundTenant;

    protected async override void OnInitialized()
    {

        loading = true;
        allTenants = await CosmosService.GetAllTenantsAsync();
        loading = false;
        StateHasChanged();

        base.OnInitialized();
    }

    protected async void searchOwner(Tenant tenant)
    {
        loading = true;
        TableResult result = await CosmosService.GetTenantByIdAsync(tenant.RowKey);
        foundTenant = result.Result as Tenant;
        loading = false;
        StateHasChanged();
    }

}
